[modules]
   base: eq .

[sorts]

[predicates]

[operations]
   e: -> base.S .
   i: base.S -> base.S .
   o: base.S base.S -> base.S .

[variables]

[terms]

[literals]

[axioms]
   congi:  base.eq(?x, ?y) ==> base.eq(i(?x), i(?y)) .
   congo:  base.eq(?x, ?y) ==> base.eq(o(?x), o(?y)) .
   leftu:  ==> base.eq(o(e(), ?y), ?y) .
   rightu: ==> base.eq(o(?x, e()), ?x) .
   assoco: ==> base.eq(o(o(?x, ?y), ?z), o(?x, o(?y, ?z))) .
