[modules]
   add:  group .
   mult: group .

   add.base
=  mult.base .

[sorts]

[predicates]

[operations]

[axioms]
   lz:    ==> { ?y } add.base.eq(mult.o(add.e(), ?y), zero) .
   rz:    ==> { ?x } add.base.eq(mult.o(?x, add.e()), zero) .
   ldist: ==> { ?x ?y ?z } add.base.eq(mult.o(?x, add.o(?y, ?z)), add.o(mult.o(?x, ?y), mult.o(?x, ?z))) .
   rdist: ==> { ?x ?y ?z } add.base.eq(mult.o(add.o(?x, ?y), ?z), add.o(mult.o(?x, ?z), mult.o(?y, ?z))) .
